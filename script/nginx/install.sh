#!/usr/bin/env bash
### AUTOMATIC NGINX INSTALLER BY WEBSTACK.UP
# https://github.com/TurboLabIt/webstackup/tree/master/script/nginx/install.sh
#
# sudo apt update && sudo apt install curl -y && curl -s https://raw.githubusercontent.com/TurboLabIt/webstackup/master/script/nginx/install.sh | sudo bash
#
# Based on: https://turbolab.it/1482 | http://nginx.org/en/linux_packages.html#Ubuntu

## bash-fx
if [ -f "/usr/local/turbolab.it/bash-fx/bash-fx.sh" ]; then
  source "/usr/local/turbolab.it/bash-fx/bash-fx.sh"
else
  source <(curl -s https://raw.githubusercontent.com/TurboLabIt/bash-fx/main/bash-fx.sh)
fi
## bash-fx is ready

fxHeader "ðŸ’¿ NGINX installer"
rootCheck


## installing/updating WSU
WSU_DIR=/usr/local/turbolab.it/webstackup/
if [ -f "${WSU_DIR}setup-if-stale.sh" ]; then
  "${WSU_DIR}setup-if-stale.sh"
else
  curl -s https://raw.githubusercontent.com/TurboLabIt/webstackup/master/setup.sh | sudo bash
fi

source "${WSU_DIR}script/base.sh"


fxTitle "Removing any old previous instance..."
apt purge --auto-remove nginx* -y
rm -rf /etc/nginx

fxTitle "Installing prerequisites..."
apt update -qq
apt install curl gnupg2 ca-certificates lsb-release ubuntu-keyring -y

fxTitle "Installing additional utilities..."
apt install software-properties-common openssl zip unzip nano -y

fxTitle "Import the official nginx signing key..."
curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null

fxTitle "Verify that the downloaded file contains the proper key..."
gpg --dry-run --quiet --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg

fxTitle "Selecting mainline..."
echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx" | sudo tee /etc/apt/sources.list.d/nginx.list

fxTitle "Set up repository pinning to prefer our packages over distribution-provided ones..."
echo -e "Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority: 900\n" | sudo tee /etc/apt/preferences.d/99nginx

## https://github.com/TurboLabIt/webstackup/blob/master/script/account/generate-www-data.sh
bash ${WEBSTACKUP_SCRIPT_DIR}account/generate-www-data.sh

wsuMkAutogenDir

fxTitle "Generating dhparam..."
openssl dhparam -out "${WEBSTACKUP_AUTOGENERATED_DIR}dhparam.pem" 2048 > /dev/null 2>&1 &

bash ${WEBSTACKUP_SCRIPT_DIR}account/generate-http-basic-auth.sh


fxTitle "apt install nginx..."
apt update -qq
apt install nginx -y

fxTitle "Assigning the nginx user to the www-data group..."
usermod -aG www-data nginx


## Create a self-signed, bogus certificate
bash "${WEBSTACKUP_SCRIPT_DIR}https/self-sign-generate.sh" localhost


fxTitle "Disable HTTP: upgrade all connections to HTTPS..."
fxLink "${WEBSTACKUP_CONFIG_DIR}nginx/00_global_https_upgrade_all.conf" /etc/nginx/conf.d/

fxTitle "Enabling the http-block level functionality"
fxLink "${WEBSTACKUP_CONFIG_DIR}nginx/02_global_http_level.conf" /etc/nginx/conf.d/

fxTitle "Enabling IP forwarding between proxies"
fxLink "${WEBSTACKUP_CONFIG_DIR}nginx/04_global_ip_forwarding.conf" /etc/nginx/conf.d/

fxTitle "Disable the default website..."
if [ -f "/etc/nginx/conf.d/default.conf" ]; then
  mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d_default_original_backup.conf
fi

fxTitle "Return 400 to requests for undefined websites..."
fxLink "${WEBSTACKUP_CONFIG_DIR}nginx/05_global_default_vhost_disable.conf" /etc/nginx/conf.d/

fxTitle "Activate the status_page..."
fxLink "${WEBSTACKUP_CONFIG_DIR}nginx/85_status_page.conf" /etc/nginx/conf.d/status_page.conf

if [ ! -f "${WEBSTACKUP_AUTOGENERATED_DIR}nginx-php_ver.conf" ]; then

  fxTitle "PHP_VER file not found. Setting up a dummy one...."
  echo "set \$PHP_VER 99.99;"  >> "/usr/local/turbolab.it/webstackup/autogenerated/nginx-php_ver.conf"
fi


fxTitle "Final nginx restart..."
nginx -t
service nginx restart

fxEndFooter
